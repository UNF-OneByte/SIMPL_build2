@page
@*@model IndexModel*@
@model SIMPL.Pages.projects.IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!--<body>-->
<div class="row">
    <div class="col-lg-7">
        <img src="~/images/5starlogo.png" alt="Smiley face" height="350" width="800" style="padding:100px">
    </div>
    <br />
    <div class="col-md-4" id="info">
        <div class="thumbnail">
            <h4><strong>My Projects:</strong></h4>
            <hr />           
            @{
                var pCount = Model.Projects.Count;
                <h5>Total projects opened: <strong>@pCount</strong> </h5>                
            }
            <hr />
        </div>
    </div>

    <div class="col-md-4">
        <div class="thumbnail" id="info">
            <h4><strong>My Tasks:</strong></h4>
            <hr />
            @{
                var tCount = "Im running into an issue where I cannot ref two models in one page.. How can I grab both project model data AND task model data at once?";
                <h5>Total tasks opened: <strong>@tCount</strong> </h5>                
            }
            <hr />
        </div>
    </div>
</div>
<div class="row">
    @*start*@
    <div class="col-sm-11">
        <div class="thumbnail">
            <h2><strong>My Projects:</strong></h2>
            <hr />
            @*start*@
            <div id="example_wrapper" class="dataTables_wrapper">
                <table id="home" class="display dataTable table" role="grid">
                    <thead>
                        <tr role="row">
                            <th class="sorting_asc" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Project ID activate to sort column descending">Project ID</th>
                            <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Project Name: activate to sort column ascending">Project Name</th>
                            <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Start Date: activate to sort column ascending">Start Date</th>
                            <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Location: activate to sort column ascending">Project Mgr.</th>
                        </tr>
                    </thead>
                    <tbody>                     
                        @foreach(var item in Model.Projects)
                        {
                            <tr role="row" class="odd">
                                <td class="sorting_1">@Html.DisplayFor(x => item.ProjectId)</td>
                                <td>@Html.DisplayFor(x => item.ProjectName)</td>
                                <td>@Html.DisplayFor(x => item.ActualStartDate)</td>
                                <td>@Html.DisplayFor(x => item.ProjectManagerId)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @*end*@
        </div>
    </div>
</div>
@*end*@
